buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'signing'

version = "1.12.2-1.0.0.0-SNAPSHOT"
group = "com.jamieswhiteshirt"
archivesBaseName = "clothesline-hooks"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8


minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"

    clientJvmArgs = serverJvmArgs = ["-Dfml.coreMods.load=$fmlCorePlugin"]

    mappings = "stable_39"
}

repositories {
    jcenter()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.+'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.+'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes([
                'FMLCorePlugin': fmlCorePlugin,
                'Maven-Artifact': "${project.group}:${project.archivesBaseName}:${project.version}",
                'Timestamp': System.currentTimeMillis()
        ])
    }
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }

    inputFile = jar.archivePath
    outputFile = jar.archivePath

    keyStore = project.properties.keyStore
    alias = project.properties.keyStoreAlias
    storePass = project.properties.keyStorePass
    keyPass = project.properties.keyStoreKeyPass
}

build.dependsOn signJar

artifacts {
    archives(signJar.outputFile) {
        file signJar.outputFile
        type 'jar'
        builtBy signJar
    }
    archives sourceJar
}

project.ext.isReleaseVersion = !version.endsWith("-SNAPSHOT")

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: 'https://maven.jamieswhiteshirt.com/libs-release/') {
            authentication(userName: project.properties.mavenUser, password: project.properties.mavenPassword)
        }
        snapshotRepository(url: 'https://maven.jamieswhiteshirt.com/libs-snapshot/') {
            authentication(userName: project.properties.mavenUser, password: project.properties.mavenPassword)
        }

        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
    }
}
